name: Create new version (package.json & CHANGELOG)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

# Required to create OIDC/JWT token required to use shared actions
permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  create-new-version:
    # Required to push the tag
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - uses: tibdex/github-app-token@v1
        id: get_installation_token
        with:
          app_id: ${{ secrets.DB_FE_GITHUB_APP_ID }}
          installation_id: ${{ secrets.DB_FE_GITHUB_APP_INSTALLATION_ID }}
          private_key: ${{ secrets.DB_FE_GITHUB_APP_PRIVATE_KEY }}

      - name: Create version & update CHANGELOG
        id: tag
        env:
          DB_FE_CI_BOT_EMAIL: ${{ secrets.DB_FE_CI_BOT_EMAIL }}
        run: |
          git config --global user.email "$DB_FE_CI_BOT_EMAIL"
          git config --global user.name "Databases Frontend CI Bot"
          git config --global url.https://x-access-token:${{ steps.get_installation_token.outputs.token }}@github.com/${{ github.repository }}

          VERSION=$(npm version ${{ inputs.version })
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Push
        run: git push origin main --tags

  build:
    needs: [create-new-version]
    uses: grafana/explore-profiles/.github/workflows/build.yml@ifrost/manual-release-workflow
    with:
      version: ${{ needs.create-new-version.outputs.version }}
      ref: ${{ needs.create-new-version.outputs.version }}

  package:
    needs: [create-new-version, build]
    uses: grafana/explore-profiles/.github/workflows/package.yml@ifrost/manual-release-workflow
    secrets: inherit
    with:
      version: ${{ needs.create-new-version.outputs.version }}
      github_environment: gcs-no-approval

  deploy:
    needs: [create-new-version, package]
    uses: grafana/explore-profiles/.github/workflows/deploy.yml@ifrost/manual-release-workflow
    secrets: inherit
    strategy:
      matrix:
        environment: [dev, ops, prod]
    with:
      version: ${{ needs.create-new-version.outputs.version }}
      environment: ${{ matrix.environment }}
