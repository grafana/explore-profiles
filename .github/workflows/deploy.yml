name: Deploy

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      environment:
        required: true
        type: string
        description: dev, ops or prod

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - run: echo "version = ${{ inputs.version }}"
      - run: echo "environment = ${{ inputs.environment }}"

  deploy-to-catalog:
    name: Deploy to ${{ inputs.environment }} catalog
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      # Required for publishing to catalog to retrieve the name of the repository
      - uses: actions/checkout@v4

      - name: Login to GCS
        id: gcloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.workload_identity_provider }}
          service_account: ${{ secrets.service_account }}

      - name: Get secrets from Vault
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          vault_instance: ops
          common_secrets: |
            GCOM_PUBLISH_TOKEN=plugins/gcom-publish-token:${{ inputs.environment }}

      - name: Publish to catalog
        uses: grafana/plugin-ci-workflows/actions/plugins/publish/publish@main
        with:
          zips: '["https://storage.googleapis.com/grafana-pyroscope-app/releases/grafana-pyroscope-app-${{ inputs.version }}.zip"]'
          environment: ${{ inputs.environment }}
          scopes: universal
          gcom-publish-token: ${{ env.GCOM_PUBLISH_TOKEN }}
          gcloud-auth-token: ${{ steps.gcloud.outputs.auth_token }}

  deploy-to-cloud:
    # This triggers Argo workflow that will perform deployment to wave. Pushes to main will trigger deployment automatically
    name: Deploy to ${{ inputs.environment }} wave
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploying ${{ inputs.version }} to ${{ inputs.environment }}
        uses: grafana/shared-workflows/actions/trigger-argo-workflow@trigger-argo-workflow-v1.0.0
        with:
          instance: 'ops'
          namespace: 'phlare-cd'
          workflow_template: 'deploy-plugin-${{ inputs.environment }}'
          parameters: |
            plugintag= ${{ inputs.version }}
          extra_args: '--name deploy-plugin-${{ inputs.environment }}-${{ inputs.version }}'
          log_level: 'debug'
