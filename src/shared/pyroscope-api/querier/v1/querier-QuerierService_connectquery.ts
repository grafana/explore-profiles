// @generated by protoc-gen-connect-query v2.0.1 with parameter "target=ts"
// @generated from file querier/v1/querier.proto (package querier.v1, syntax proto3)
/* eslint-disable */

import { QuerierService } from "./querier_pb";

/**
 * ProfileType returns a list of the existing profile types.
 *
 * @generated from rpc querier.v1.QuerierService.ProfileTypes
 */
export const profileTypes = QuerierService.method.profileTypes;

/**
 * LabelValues returns the existing label values for the provided label names.
 *
 * @generated from rpc querier.v1.QuerierService.LabelValues
 */
export const labelValues = QuerierService.method.labelValues;

/**
 * LabelNames returns a list of the existing label names.
 *
 * @generated from rpc querier.v1.QuerierService.LabelNames
 */
export const labelNames = QuerierService.method.labelNames;

/**
 * Series returns profiles series matching the request. A series is a unique label set.
 *
 * @generated from rpc querier.v1.QuerierService.Series
 */
export const series = QuerierService.method.series;

/**
 * SelectMergeStacktraces returns matching profiles aggregated in a flamegraph format. It will combine samples from within the same callstack, with each element being grouped by its function name.
 *
 * @generated from rpc querier.v1.QuerierService.SelectMergeStacktraces
 */
export const selectMergeStacktraces = QuerierService.method.selectMergeStacktraces;

/**
 * SelectMergeSpanProfile returns matching profiles aggregated in a flamegraph format. It will combine samples from within the same callstack, with each element being grouped by its function name.
 *
 * @generated from rpc querier.v1.QuerierService.SelectMergeSpanProfile
 */
export const selectMergeSpanProfile = QuerierService.method.selectMergeSpanProfile;

/**
 * SelectMergeProfile returns matching profiles aggregated in pprof format. It will contain all information stored (so including filenames and line number, if ingested).
 *
 * @generated from rpc querier.v1.QuerierService.SelectMergeProfile
 */
export const selectMergeProfile = QuerierService.method.selectMergeProfile;

/**
 * SelectSeries returns a time series for the total sum of the requested profiles.
 *
 * @generated from rpc querier.v1.QuerierService.SelectSeries
 */
export const selectSeries = QuerierService.method.selectSeries;

/**
 * Diff returns a diff of two profiles
 *
 * @generated from rpc querier.v1.QuerierService.Diff
 */
export const diff = QuerierService.method.diff;

/**
 * GetProfileStats returns profile stats for the current tenant.
 *
 * @generated from rpc querier.v1.QuerierService.GetProfileStats
 */
export const getProfileStats = QuerierService.method.getProfileStats;

/**
 * @generated from rpc querier.v1.QuerierService.AnalyzeQuery
 */
export const analyzeQuery = QuerierService.method.analyzeQuery;
