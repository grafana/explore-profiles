// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file types/v1/types.proto (package types.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file types/v1/types.proto.
 */
export const file_types_v1_types: GenFile = /*@__PURE__*/
  fileDesc("ChR0eXBlcy92MS90eXBlcy5wcm90bxIIdHlwZXMudjEiKAoJTGFiZWxQYWlyEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAkiewoLUHJvZmlsZVR5cGUSCgoCSUQYASABKAkSDAoEbmFtZRgCIAEoCRITCgtzYW1wbGVfdHlwZRgEIAEoCRITCgtzYW1wbGVfdW5pdBgFIAEoCRITCgtwZXJpb2RfdHlwZRgGIAEoCRITCgtwZXJpb2RfdW5pdBgHIAEoCSItCgZMYWJlbHMSIwoGbGFiZWxzGAEgAygLMhMudHlwZXMudjEuTGFiZWxQYWlyIk4KBlNlcmllcxIjCgZsYWJlbHMYASADKAsyEy50eXBlcy52MS5MYWJlbFBhaXISHwoGcG9pbnRzGAIgAygLMg8udHlwZXMudjEuUG9pbnQiKQoFUG9pbnQSDQoFdmFsdWUYASABKAESEQoJdGltZXN0YW1wGAIgASgDIlAKEkxhYmVsVmFsdWVzUmVxdWVzdBIMCgRuYW1lGAEgASgJEhAKCG1hdGNoZXJzGAIgAygJEg0KBXN0YXJ0GAMgASgDEgsKA2VuZBgEIAEoAyIkChNMYWJlbFZhbHVlc1Jlc3BvbnNlEg0KBW5hbWVzGAEgAygJIkEKEUxhYmVsTmFtZXNSZXF1ZXN0EhAKCG1hdGNoZXJzGAEgAygJEg0KBXN0YXJ0GAIgASgDEgsKA2VuZBgDIAEoAyIjChJMYWJlbE5hbWVzUmVzcG9uc2USDQoFbmFtZXMYASADKAkikQEKCUJsb2NrSW5mbxIMCgR1bGlkGAEgASgJEhAKCG1pbl90aW1lGAIgASgDEhAKCG1heF90aW1lGAMgASgDEi0KCmNvbXBhY3Rpb24YBCABKAsyGS50eXBlcy52MS5CbG9ja0NvbXBhY3Rpb24SIwoGbGFiZWxzGAUgAygLMhMudHlwZXMudjEuTGFiZWxQYWlyIkIKD0Jsb2NrQ29tcGFjdGlvbhINCgVsZXZlbBgBIAEoBRIPCgdzb3VyY2VzGAIgAygJEg8KB3BhcmVudHMYAyADKAkiXAoSU3RhY2tUcmFjZVNlbGVjdG9yEiUKCWNhbGxfc2l0ZRgBIAMoCzISLnR5cGVzLnYxLkxvY2F0aW9uEh8KBmdvX3BnbxgCIAEoCzIPLnR5cGVzLnYxLkdvUEdPIhgKCExvY2F0aW9uEgwKBG5hbWUYASABKAkiOgoFR29QR08SFgoOa2VlcF9sb2NhdGlvbnMYASABKA0SGQoRYWdncmVnYXRlX2NhbGxlZXMYAiABKAgiGAoWR2V0UHJvZmlsZVN0YXRzUmVxdWVzdCJqChdHZXRQcm9maWxlU3RhdHNSZXNwb25zZRIVCg1kYXRhX2luZ2VzdGVkGAEgASgIEhsKE29sZGVzdF9wcm9maWxlX3RpbWUYAiABKAMSGwoTbmV3ZXN0X3Byb2ZpbGVfdGltZRgDIAEoAyprChlUaW1lU2VyaWVzQWdncmVnYXRpb25UeXBlEiQKIFRJTUVfU0VSSUVTX0FHR1JFR0FUSU9OX1RZUEVfU1VNEAASKAokVElNRV9TRVJJRVNfQUdHUkVHQVRJT05fVFlQRV9BVkVSQUdFEAFiBnByb3RvMw");

/**
 * @generated from message types.v1.LabelPair
 */
export type LabelPair = Message<"types.v1.LabelPair"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;
};

/**
 * Describes the message types.v1.LabelPair.
 * Use `create(LabelPairSchema)` to create a new message.
 */
export const LabelPairSchema: GenMessage<LabelPair> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 0);

/**
 * @generated from message types.v1.ProfileType
 */
export type ProfileType = Message<"types.v1.ProfileType"> & {
  /**
   * @generated from field: string ID = 1;
   */
  ID: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string sample_type = 4;
   */
  sampleType: string;

  /**
   * @generated from field: string sample_unit = 5;
   */
  sampleUnit: string;

  /**
   * @generated from field: string period_type = 6;
   */
  periodType: string;

  /**
   * @generated from field: string period_unit = 7;
   */
  periodUnit: string;
};

/**
 * Describes the message types.v1.ProfileType.
 * Use `create(ProfileTypeSchema)` to create a new message.
 */
export const ProfileTypeSchema: GenMessage<ProfileType> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 1);

/**
 * @generated from message types.v1.Labels
 */
export type Labels = Message<"types.v1.Labels"> & {
  /**
   * LabelPair is the key value pairs to identify the corresponding profile
   *
   * @generated from field: repeated types.v1.LabelPair labels = 1;
   */
  labels: LabelPair[];
};

/**
 * Describes the message types.v1.Labels.
 * Use `create(LabelsSchema)` to create a new message.
 */
export const LabelsSchema: GenMessage<Labels> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 2);

/**
 * @generated from message types.v1.Series
 */
export type Series = Message<"types.v1.Series"> & {
  /**
   * @generated from field: repeated types.v1.LabelPair labels = 1;
   */
  labels: LabelPair[];

  /**
   * @generated from field: repeated types.v1.Point points = 2;
   */
  points: Point[];
};

/**
 * Describes the message types.v1.Series.
 * Use `create(SeriesSchema)` to create a new message.
 */
export const SeriesSchema: GenMessage<Series> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 3);

/**
 * @generated from message types.v1.Point
 */
export type Point = Message<"types.v1.Point"> & {
  /**
   * @generated from field: double value = 1;
   */
  value: number;

  /**
   * Milliseconds unix timestamp
   *
   * @generated from field: int64 timestamp = 2;
   */
  timestamp: bigint;
};

/**
 * Describes the message types.v1.Point.
 * Use `create(PointSchema)` to create a new message.
 */
export const PointSchema: GenMessage<Point> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 4);

/**
 * @generated from message types.v1.LabelValuesRequest
 */
export type LabelValuesRequest = Message<"types.v1.LabelValuesRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated string matchers = 2;
   */
  matchers: string[];

  /**
   * @generated from field: int64 start = 3;
   */
  start: bigint;

  /**
   * @generated from field: int64 end = 4;
   */
  end: bigint;
};

/**
 * Describes the message types.v1.LabelValuesRequest.
 * Use `create(LabelValuesRequestSchema)` to create a new message.
 */
export const LabelValuesRequestSchema: GenMessage<LabelValuesRequest> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 5);

/**
 * @generated from message types.v1.LabelValuesResponse
 */
export type LabelValuesResponse = Message<"types.v1.LabelValuesResponse"> & {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[];
};

/**
 * Describes the message types.v1.LabelValuesResponse.
 * Use `create(LabelValuesResponseSchema)` to create a new message.
 */
export const LabelValuesResponseSchema: GenMessage<LabelValuesResponse> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 6);

/**
 * @generated from message types.v1.LabelNamesRequest
 */
export type LabelNamesRequest = Message<"types.v1.LabelNamesRequest"> & {
  /**
   * @generated from field: repeated string matchers = 1;
   */
  matchers: string[];

  /**
   * @generated from field: int64 start = 2;
   */
  start: bigint;

  /**
   * @generated from field: int64 end = 3;
   */
  end: bigint;
};

/**
 * Describes the message types.v1.LabelNamesRequest.
 * Use `create(LabelNamesRequestSchema)` to create a new message.
 */
export const LabelNamesRequestSchema: GenMessage<LabelNamesRequest> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 7);

/**
 * @generated from message types.v1.LabelNamesResponse
 */
export type LabelNamesResponse = Message<"types.v1.LabelNamesResponse"> & {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[];
};

/**
 * Describes the message types.v1.LabelNamesResponse.
 * Use `create(LabelNamesResponseSchema)` to create a new message.
 */
export const LabelNamesResponseSchema: GenMessage<LabelNamesResponse> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 8);

/**
 * @generated from message types.v1.BlockInfo
 */
export type BlockInfo = Message<"types.v1.BlockInfo"> & {
  /**
   * @generated from field: string ulid = 1;
   */
  ulid: string;

  /**
   * @generated from field: int64 min_time = 2;
   */
  minTime: bigint;

  /**
   * @generated from field: int64 max_time = 3;
   */
  maxTime: bigint;

  /**
   * @generated from field: types.v1.BlockCompaction compaction = 4;
   */
  compaction?: BlockCompaction;

  /**
   * @generated from field: repeated types.v1.LabelPair labels = 5;
   */
  labels: LabelPair[];
};

/**
 * Describes the message types.v1.BlockInfo.
 * Use `create(BlockInfoSchema)` to create a new message.
 */
export const BlockInfoSchema: GenMessage<BlockInfo> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 9);

/**
 * @generated from message types.v1.BlockCompaction
 */
export type BlockCompaction = Message<"types.v1.BlockCompaction"> & {
  /**
   * @generated from field: int32 level = 1;
   */
  level: number;

  /**
   * @generated from field: repeated string sources = 2;
   */
  sources: string[];

  /**
   * @generated from field: repeated string parents = 3;
   */
  parents: string[];
};

/**
 * Describes the message types.v1.BlockCompaction.
 * Use `create(BlockCompactionSchema)` to create a new message.
 */
export const BlockCompactionSchema: GenMessage<BlockCompaction> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 10);

/**
 * StackTraceSelector is used for filtering stack traces by locations.
 *
 * @generated from message types.v1.StackTraceSelector
 */
export type StackTraceSelector = Message<"types.v1.StackTraceSelector"> & {
  /**
   * Stack trace of the call site. Root at call_site[0].
   * Only stack traces having the prefix provided will be selected.
   * If empty, the filter is ignored.
   *
   * @generated from field: repeated types.v1.Location call_site = 1;
   */
  callSite: Location[];

  /**
   * Stack trace selector for profiles purposed for Go PGO.
   * If set, call_site is ignored.
   *
   * @generated from field: types.v1.GoPGO go_pgo = 2;
   */
  goPgo?: GoPGO;
};

/**
 * Describes the message types.v1.StackTraceSelector.
 * Use `create(StackTraceSelectorSchema)` to create a new message.
 */
export const StackTraceSelectorSchema: GenMessage<StackTraceSelector> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 11);

/**
 * @generated from message types.v1.Location
 */
export type Location = Message<"types.v1.Location"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message types.v1.Location.
 * Use `create(LocationSchema)` to create a new message.
 */
export const LocationSchema: GenMessage<Location> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 12);

/**
 * @generated from message types.v1.GoPGO
 */
export type GoPGO = Message<"types.v1.GoPGO"> & {
  /**
   * Specifies the number of leaf locations to keep.
   *
   * @generated from field: uint32 keep_locations = 1;
   */
  keepLocations: number;

  /**
   * Aggregate callees causes the leaf location line number to be ignored,
   * thus aggregating all callee samples (but not callers).
   *
   * @generated from field: bool aggregate_callees = 2;
   */
  aggregateCallees: boolean;
};

/**
 * Describes the message types.v1.GoPGO.
 * Use `create(GoPGOSchema)` to create a new message.
 */
export const GoPGOSchema: GenMessage<GoPGO> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 13);

/**
 * @generated from message types.v1.GetProfileStatsRequest
 */
export type GetProfileStatsRequest = Message<"types.v1.GetProfileStatsRequest"> & {
};

/**
 * Describes the message types.v1.GetProfileStatsRequest.
 * Use `create(GetProfileStatsRequestSchema)` to create a new message.
 */
export const GetProfileStatsRequestSchema: GenMessage<GetProfileStatsRequest> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 14);

/**
 * @generated from message types.v1.GetProfileStatsResponse
 */
export type GetProfileStatsResponse = Message<"types.v1.GetProfileStatsResponse"> & {
  /**
   * Whether we received any data at any time in the past.
   *
   * @generated from field: bool data_ingested = 1;
   */
  dataIngested: boolean;

  /**
   * Milliseconds since epoch.
   *
   * @generated from field: int64 oldest_profile_time = 2;
   */
  oldestProfileTime: bigint;

  /**
   * Milliseconds since epoch.
   *
   * @generated from field: int64 newest_profile_time = 3;
   */
  newestProfileTime: bigint;
};

/**
 * Describes the message types.v1.GetProfileStatsResponse.
 * Use `create(GetProfileStatsResponseSchema)` to create a new message.
 */
export const GetProfileStatsResponseSchema: GenMessage<GetProfileStatsResponse> = /*@__PURE__*/
  messageDesc(file_types_v1_types, 15);

/**
 * @generated from enum types.v1.TimeSeriesAggregationType
 */
export enum TimeSeriesAggregationType {
  /**
   * @generated from enum value: TIME_SERIES_AGGREGATION_TYPE_SUM = 0;
   */
  SUM = 0,

  /**
   * @generated from enum value: TIME_SERIES_AGGREGATION_TYPE_AVERAGE = 1;
   */
  AVERAGE = 1,
}

/**
 * Describes the enum types.v1.TimeSeriesAggregationType.
 */
export const TimeSeriesAggregationTypeSchema: GenEnum<TimeSeriesAggregationType> = /*@__PURE__*/
  enumDesc(file_types_v1_types, 0);

