// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file settings/v1/recording_rules.proto (package settings.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { LabelPair } from "../../types/v1/types_pb";
import { file_types_v1_types } from "../../types/v1/types_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file settings/v1/recording_rules.proto.
 */
export const file_settings_v1_recording_rules: GenFile = /*@__PURE__*/
  fileDesc("CiFzZXR0aW5ncy92MS9yZWNvcmRpbmdfcnVsZXMucHJvdG8SC3NldHRpbmdzLnYxIiUKF0dldFJlY29yZGluZ1J1bGVSZXF1ZXN0EgoKAmlkGAEgASgJIkQKGEdldFJlY29yZGluZ1J1bGVSZXNwb25zZRIoCgRydWxlGAEgASgLMhouc2V0dGluZ3MudjEuUmVjb3JkaW5nUnVsZSIbChlMaXN0UmVjb3JkaW5nUnVsZXNSZXF1ZXN0IkcKGkxpc3RSZWNvcmRpbmdSdWxlc1Jlc3BvbnNlEikKBXJ1bGVzGAEgAygLMhouc2V0dGluZ3MudjEuUmVjb3JkaW5nUnVsZSKjAQoaVXBzZXJ0UmVjb3JkaW5nUnVsZVJlcXVlc3QSCgoCaWQYASABKAkSEwoLbWV0cmljX25hbWUYAiABKAkSEAoIbWF0Y2hlcnMYAyADKAkSEAoIZ3JvdXBfYnkYBCADKAkSLAoPZXh0ZXJuYWxfbGFiZWxzGAUgAygLMhMudHlwZXMudjEuTGFiZWxQYWlyEhIKCmdlbmVyYXRpb24YBiABKAMiRwobVXBzZXJ0UmVjb3JkaW5nUnVsZVJlc3BvbnNlEigKBHJ1bGUYASABKAsyGi5zZXR0aW5ncy52MS5SZWNvcmRpbmdSdWxlIigKGkRlbGV0ZVJlY29yZGluZ1J1bGVSZXF1ZXN0EgoKAmlkGAEgASgJIh0KG0RlbGV0ZVJlY29yZGluZ1J1bGVSZXNwb25zZSKsAQoNUmVjb3JkaW5nUnVsZRIKCgJpZBgBIAEoCRITCgttZXRyaWNfbmFtZRgCIAEoCRIUCgxwcm9maWxlX3R5cGUYAyABKAkSEAoIbWF0Y2hlcnMYBCADKAkSEAoIZ3JvdXBfYnkYBSADKAkSLAoPZXh0ZXJuYWxfbGFiZWxzGAYgAygLMhMudHlwZXMudjEuTGFiZWxQYWlyEhIKCmdlbmVyYXRpb24YByABKAMiuwEKElJlY29yZGluZ1J1bGVTdG9yZRIKCgJpZBgBIAEoCRITCgttZXRyaWNfbmFtZRgCIAEoCRIeChZwcm9tZXRoZXVzX2RhdGFfc291cmNlGAMgASgJEhAKCG1hdGNoZXJzGAQgAygJEhAKCGdyb3VwX2J5GAUgAygJEiwKD2V4dGVybmFsX2xhYmVscxgGIAMoCzITLnR5cGVzLnYxLkxhYmVsUGFpchISCgpnZW5lcmF0aW9uGAcgASgDIlkKE1JlY29yZGluZ1J1bGVzU3RvcmUSLgoFcnVsZXMYASADKAsyHy5zZXR0aW5ncy52MS5SZWNvcmRpbmdSdWxlU3RvcmUSEgoKZ2VuZXJhdGlvbhgCIAEoAzK7AwoVUmVjb3JkaW5nUnVsZXNTZXJ2aWNlEmEKEEdldFJlY29yZGluZ1J1bGUSJC5zZXR0aW5ncy52MS5HZXRSZWNvcmRpbmdSdWxlUmVxdWVzdBolLnNldHRpbmdzLnYxLkdldFJlY29yZGluZ1J1bGVSZXNwb25zZSIAEmcKEkxpc3RSZWNvcmRpbmdSdWxlcxImLnNldHRpbmdzLnYxLkxpc3RSZWNvcmRpbmdSdWxlc1JlcXVlc3QaJy5zZXR0aW5ncy52MS5MaXN0UmVjb3JkaW5nUnVsZXNSZXNwb25zZSIAEmoKE1Vwc2VydFJlY29yZGluZ1J1bGUSJy5zZXR0aW5ncy52MS5VcHNlcnRSZWNvcmRpbmdSdWxlUmVxdWVzdBooLnNldHRpbmdzLnYxLlVwc2VydFJlY29yZGluZ1J1bGVSZXNwb25zZSIAEmoKE0RlbGV0ZVJlY29yZGluZ1J1bGUSJy5zZXR0aW5ncy52MS5EZWxldGVSZWNvcmRpbmdSdWxlUmVxdWVzdBooLnNldHRpbmdzLnYxLkRlbGV0ZVJlY29yZGluZ1J1bGVSZXNwb25zZSIAYgZwcm90bzM", [file_types_v1_types]);

/**
 * @generated from message settings.v1.GetRecordingRuleRequest
 */
export type GetRecordingRuleRequest = Message<"settings.v1.GetRecordingRuleRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message settings.v1.GetRecordingRuleRequest.
 * Use `create(GetRecordingRuleRequestSchema)` to create a new message.
 */
export const GetRecordingRuleRequestSchema: GenMessage<GetRecordingRuleRequest> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 0);

/**
 * @generated from message settings.v1.GetRecordingRuleResponse
 */
export type GetRecordingRuleResponse = Message<"settings.v1.GetRecordingRuleResponse"> & {
  /**
   * @generated from field: settings.v1.RecordingRule rule = 1;
   */
  rule?: RecordingRule;
};

/**
 * Describes the message settings.v1.GetRecordingRuleResponse.
 * Use `create(GetRecordingRuleResponseSchema)` to create a new message.
 */
export const GetRecordingRuleResponseSchema: GenMessage<GetRecordingRuleResponse> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 1);

/**
 * @generated from message settings.v1.ListRecordingRulesRequest
 */
export type ListRecordingRulesRequest = Message<"settings.v1.ListRecordingRulesRequest"> & {
};

/**
 * Describes the message settings.v1.ListRecordingRulesRequest.
 * Use `create(ListRecordingRulesRequestSchema)` to create a new message.
 */
export const ListRecordingRulesRequestSchema: GenMessage<ListRecordingRulesRequest> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 2);

/**
 * @generated from message settings.v1.ListRecordingRulesResponse
 */
export type ListRecordingRulesResponse = Message<"settings.v1.ListRecordingRulesResponse"> & {
  /**
   * @generated from field: repeated settings.v1.RecordingRule rules = 1;
   */
  rules: RecordingRule[];
};

/**
 * Describes the message settings.v1.ListRecordingRulesResponse.
 * Use `create(ListRecordingRulesResponseSchema)` to create a new message.
 */
export const ListRecordingRulesResponseSchema: GenMessage<ListRecordingRulesResponse> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 3);

/**
 * @generated from message settings.v1.UpsertRecordingRuleRequest
 */
export type UpsertRecordingRuleRequest = Message<"settings.v1.UpsertRecordingRuleRequest"> & {
  /**
   * The unique id of the recording rule. If an id is not provided, this will
   * create a new recording rule. If an id is provided, it will replace the
   * existing recording rule.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string metric_name = 2;
   */
  metricName: string;

  /**
   * @generated from field: repeated string matchers = 3;
   */
  matchers: string[];

  /**
   * @generated from field: repeated string group_by = 4;
   */
  groupBy: string[];

  /**
   * @generated from field: repeated types.v1.LabelPair external_labels = 5;
   */
  externalLabels: LabelPair[];

  /**
   * The observed generation of this recording rule. If this value does not
   * match the generation stored in the database, this upsert will be rejected.
   *
   * @generated from field: int64 generation = 6;
   */
  generation: bigint;
};

/**
 * Describes the message settings.v1.UpsertRecordingRuleRequest.
 * Use `create(UpsertRecordingRuleRequestSchema)` to create a new message.
 */
export const UpsertRecordingRuleRequestSchema: GenMessage<UpsertRecordingRuleRequest> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 4);

/**
 * @generated from message settings.v1.UpsertRecordingRuleResponse
 */
export type UpsertRecordingRuleResponse = Message<"settings.v1.UpsertRecordingRuleResponse"> & {
  /**
   * @generated from field: settings.v1.RecordingRule rule = 1;
   */
  rule?: RecordingRule;
};

/**
 * Describes the message settings.v1.UpsertRecordingRuleResponse.
 * Use `create(UpsertRecordingRuleResponseSchema)` to create a new message.
 */
export const UpsertRecordingRuleResponseSchema: GenMessage<UpsertRecordingRuleResponse> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 5);

/**
 * @generated from message settings.v1.DeleteRecordingRuleRequest
 */
export type DeleteRecordingRuleRequest = Message<"settings.v1.DeleteRecordingRuleRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message settings.v1.DeleteRecordingRuleRequest.
 * Use `create(DeleteRecordingRuleRequestSchema)` to create a new message.
 */
export const DeleteRecordingRuleRequestSchema: GenMessage<DeleteRecordingRuleRequest> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 6);

/**
 * @generated from message settings.v1.DeleteRecordingRuleResponse
 */
export type DeleteRecordingRuleResponse = Message<"settings.v1.DeleteRecordingRuleResponse"> & {
};

/**
 * Describes the message settings.v1.DeleteRecordingRuleResponse.
 * Use `create(DeleteRecordingRuleResponseSchema)` to create a new message.
 */
export const DeleteRecordingRuleResponseSchema: GenMessage<DeleteRecordingRuleResponse> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 7);

/**
 * @generated from message settings.v1.RecordingRule
 */
export type RecordingRule = Message<"settings.v1.RecordingRule"> & {
  /**
   * The unique id of the recording rule.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The name of the recording rule, this does not necessarily need to be
   * unique.
   *
   * @generated from field: string metric_name = 2;
   */
  metricName: string;

  /**
   * Used in the UI to display what type of profile type this recording rule is
   * generated from.
   *
   * This should be the standard format of:
   *
   *   <name>:<sample-type>:<sample-unit>:<period-type>:<period-unit>
   *
   * For example:
   *
   *   process_cpu:cpu:nanoseconds:cpu:nanoseconds
   *
   * @generated from field: string profile_type = 3;
   */
  profileType: string;

  /**
   * @generated from field: repeated string matchers = 4;
   */
  matchers: string[];

  /**
   * @generated from field: repeated string group_by = 5;
   */
  groupBy: string[];

  /**
   * @generated from field: repeated types.v1.LabelPair external_labels = 6;
   */
  externalLabels: LabelPair[];

  /**
   * The observed generation of this recording rule. This value should be
   * provided when making updates to this record, to avoid conflicting
   * concurrent updates.
   *
   * @generated from field: int64 generation = 7;
   */
  generation: bigint;
};

/**
 * Describes the message settings.v1.RecordingRule.
 * Use `create(RecordingRuleSchema)` to create a new message.
 */
export const RecordingRuleSchema: GenMessage<RecordingRule> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 8);

/**
 * @generated from message settings.v1.RecordingRuleStore
 */
export type RecordingRuleStore = Message<"settings.v1.RecordingRuleStore"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string metric_name = 2;
   */
  metricName: string;

  /**
   * @generated from field: string prometheus_data_source = 3;
   */
  prometheusDataSource: string;

  /**
   * @generated from field: repeated string matchers = 4;
   */
  matchers: string[];

  /**
   * @generated from field: repeated string group_by = 5;
   */
  groupBy: string[];

  /**
   * @generated from field: repeated types.v1.LabelPair external_labels = 6;
   */
  externalLabels: LabelPair[];

  /**
   * @generated from field: int64 generation = 7;
   */
  generation: bigint;
};

/**
 * Describes the message settings.v1.RecordingRuleStore.
 * Use `create(RecordingRuleStoreSchema)` to create a new message.
 */
export const RecordingRuleStoreSchema: GenMessage<RecordingRuleStore> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 9);

/**
 * @generated from message settings.v1.RecordingRulesStore
 */
export type RecordingRulesStore = Message<"settings.v1.RecordingRulesStore"> & {
  /**
   * @generated from field: repeated settings.v1.RecordingRuleStore rules = 1;
   */
  rules: RecordingRuleStore[];

  /**
   * @generated from field: int64 generation = 2;
   */
  generation: bigint;
};

/**
 * Describes the message settings.v1.RecordingRulesStore.
 * Use `create(RecordingRulesStoreSchema)` to create a new message.
 */
export const RecordingRulesStoreSchema: GenMessage<RecordingRulesStore> = /*@__PURE__*/
  messageDesc(file_settings_v1_recording_rules, 10);

/**
 * @generated from service settings.v1.RecordingRulesService
 */
export const RecordingRulesService: GenService<{
  /**
   * @generated from rpc settings.v1.RecordingRulesService.GetRecordingRule
   */
  getRecordingRule: {
    methodKind: "unary";
    input: typeof GetRecordingRuleRequestSchema;
    output: typeof GetRecordingRuleResponseSchema;
  },
  /**
   * @generated from rpc settings.v1.RecordingRulesService.ListRecordingRules
   */
  listRecordingRules: {
    methodKind: "unary";
    input: typeof ListRecordingRulesRequestSchema;
    output: typeof ListRecordingRulesResponseSchema;
  },
  /**
   * @generated from rpc settings.v1.RecordingRulesService.UpsertRecordingRule
   */
  upsertRecordingRule: {
    methodKind: "unary";
    input: typeof UpsertRecordingRuleRequestSchema;
    output: typeof UpsertRecordingRuleResponseSchema;
  },
  /**
   * @generated from rpc settings.v1.RecordingRulesService.DeleteRecordingRule
   */
  deleteRecordingRule: {
    methodKind: "unary";
    input: typeof DeleteRecordingRuleRequestSchema;
    output: typeof DeleteRecordingRuleResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_settings_v1_recording_rules, 0);

