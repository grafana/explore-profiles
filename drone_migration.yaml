- kind: pipeline
  name: build packages
  services: []
  steps:
    - commands:
        - echo $DRONE_RUNNER_NAME
      image: alpine
      name: runner identification
    - commands:
        - git fetch origin --tags
        - git status --porcelain --untracked-files=no
        - git diff --no-ext-diff --quiet
      depends_on: []
      image: golang:1.20.4
      name: generate tags
    - commands:
        - yarn install --immutable
      image: node:20-bullseye
      name: install dependencies
    - commands:
        - export NODE_ENV=production
        - echo "export const GIT_COMMIT = '${DRONE_COMMIT}';" > src/version.ts
        - ./scripts/replace-package-json-version ${DRONE_TAG}
        - yarn build
      depends_on:
        - install dependencies
      image: node:20-bullseye
      name: build frontend packages
    - commands:
        - apt update
        - apt install zip
        - ./scripts/package-and-sign ${DRONE_BUILD_NUMBER}
      depends_on:
        - build frontend packages
      environment:
        GRAFANA_ACCESS_POLICY_TOKEN:
          from_secret: GRAFANA_ACCESS_POLICY_TOKEN
      image: node:20-bullseye
      name: package and sign
      when:
        ref:
          - refs/tags/weekly-f*
    - commands: []
      depends_on:
        - package and sign
      image: plugins/gcs
      name: publish zip to GCS
      settings:
        acl: allUsers:READER
        source: grafana-pyroscope-app-${DRONE_BUILD_NUMBER}.zip
        target: grafana-pyroscope-app/releases/grafana-pyroscope-app-${DRONE_BUILD_NUMBER}.zip
        token:
          from_secret: gcs_service_account_key
      when:
        ref:
          - refs/tags/weekly-f*
    - commands: []
      depends_on:
        - package and sign
      image: plugins/gcs
      name: publish zip to GCS with commit SHA
      settings:
        acl: allUsers:READER
        source: grafana-pyroscope-app-${DRONE_BUILD_NUMBER}.zip
        target: grafana-pyroscope-app/releases/grafana-pyroscope-app-${DRONE_COMMIT}.zip
        token:
          from_secret: gcs_service_account_key
      when:
        ref:
          - refs/tags/weekly-f*
    - commands: []
      depends_on:
        - package and sign
      image: plugins/gcs
      name: publish zip to GCS with latest
      settings:
        acl: allUsers:READER
        source: grafana-pyroscope-app-${DRONE_BUILD_NUMBER}.zip
        target: grafana-pyroscope-app/releases/grafana-pyroscope-app-latest.zip
        token:
          from_secret: gcs_service_account_key
      when:
        ref:
          - refs/tags/weekly-f*
    - commands: []
      depends_on:
        - package and sign
        - generate tags
      image: plugins/gcs
      name: publish zip to GCS with tag
      settings:
        acl: allUsers:READER
        source: grafana-pyroscope-app-${DRONE_BUILD_NUMBER}.zip
        target: grafana-pyroscope-app/releases/grafana-pyroscope-app-${DRONE_TAG}.zip
        token:
          from_secret: gcs_service_account_key
      when:
        ref:
          - refs/tags/weekly-f*
    - commands: []
      depends_on:
        - generate tags
        - package and sign
      image: plugins/github-release
      name: publish release to Github
      settings:
        api_key:
          from_secret: gh_token
        files: grafana-pyroscope-app-${DRONE_BUILD_NUMBER}.zip
        title: ${DRONE_TAG}
      when:
        ref:
          - refs/tags/weekly-f*
  trigger:
    ref:
      - refs/tags/weekly-f*
  type: docker
- depends_on:
    - build packages
  image_pull_secrets:
    - gcr_reader
  kind: pipeline
  name: weekly deploy ops
  services: []
  steps:
    - commands:
        - echo $DRONE_RUNNER_NAME
      image: alpine
      name: runner identification
    - commands:
        - git fetch origin --tags
        - git status --porcelain --untracked-files=no
        - git diff --no-ext-diff --quiet
      depends_on: []
      image: golang:1.20.4
      name: generate tags
    - depends_on:
        - generate tags
      image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
      name: launch deploy-plugin-ops workflow
      settings:
        add_ci_labels: true
        command: submit --from workflowtemplate/deploy-plugin-ops --name deploy-plugin-ops-${DRONE_TAG}
          --parameter plugintag=${DRONE_TAG}
        log_level: debug
        namespace: phlare-cd
        token:
          from_secret: argo_token
  trigger:
    ref:
      - refs/tags/weekly-f*
  type: docker
- depends_on:
    - build packages
  image_pull_secrets:
    - gcr_reader
  kind: pipeline
  name: weekly deploy prod
  services: []
  steps:
    - commands:
        - echo $DRONE_RUNNER_NAME
      image: alpine
      name: runner identification
    - commands:
        - git fetch origin --tags
        - git status --porcelain --untracked-files=no
        - git diff --no-ext-diff --quiet
      depends_on: []
      image: golang:1.20.4
      name: generate tags
    - depends_on:
        - generate tags
      image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
      name: launch deploy-plugin-prod workflow
      settings:
        add_ci_labels: true
        command: submit --from workflowtemplate/deploy-plugin-prod --name deploy-plugin-prod-${DRONE_TAG}
          --parameter plugintag=${DRONE_TAG}
        log_level: debug
        namespace: phlare-cd
        token:
          from_secret: argo_token
  trigger:
    ref:
      - refs/tags/weekly-f*
  type: docker
- depends_on:
    - build packages
  image_pull_secrets:
    - gcr_reader
  kind: pipeline
  name: deploy ops
  services: []
  steps:
    - commands:
        - echo $DRONE_RUNNER_NAME
      image: alpine
      name: runner identification
    - commands:
        - git fetch origin --tags
        - git status --porcelain --untracked-files=no
        - git diff --no-ext-diff --quiet
      depends_on: []
      image: golang:1.20.4
      name: generate tags
    - depends_on:
        - generate tags
      image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
      name: launch deploy-plugin-ops workflow
      settings:
        add_ci_labels: true
        command: submit --from workflowtemplate/deploy-plugin-ops --name deploy-plugin-ops-${DRONE_TAG}
          --parameter plugintag=${DRONE_TAG}
        log_level: debug
        namespace: phlare-cd
        token:
          from_secret: argo_token
  trigger:
    event:
      - promote
    ref:
      - refs/tags/*
    target:
      - ops
  type: docker
- depends_on:
    - build packages
  image_pull_secrets:
    - gcr_reader
  kind: pipeline
  name: deploy prod
  services: []
  steps:
    - commands:
        - echo $DRONE_RUNNER_NAME
      image: alpine
      name: runner identification
    - commands:
        - git fetch origin --tags
        - git status --porcelain --untracked-files=no
        - git diff --no-ext-diff --quiet
      depends_on: []
      image: golang:1.20.4
      name: generate tags
    - depends_on:
        - generate tags
      image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
      name: launch deploy-plugin-prod workflow
      settings:
        add_ci_labels: true
        command: submit --from workflowtemplate/deploy-plugin-prod --name deploy-plugin-prod-${DRONE_TAG}
          --parameter plugintag=${DRONE_TAG}
        log_level: debug
        namespace: phlare-cd
        token:
          from_secret: argo_token
  trigger:
    event:
      - promote
    ref:
      - refs/tags/*
    target:
      - prod
  type: docker
- depends_on:
    - build packages
  image_pull_secrets:
    - gcr_reader
  kind: pipeline
  name: deploy opsprod
  services: []
  steps:
    - commands:
        - echo $DRONE_RUNNER_NAME
      image: alpine
      name: runner identification
    - commands:
        - git fetch origin --tags
        - git status --porcelain --untracked-files=no
        - git diff --no-ext-diff --quiet
      depends_on: []
      image: golang:1.20.4
      name: generate tags
    - depends_on:
        - generate tags
      image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
      name: launch deploy-plugin-ops workflow
      settings:
        add_ci_labels: true
        command: submit --from workflowtemplate/deploy-plugin-ops --name deploy-plugin-ops-${DRONE_TAG}
          --parameter plugintag=${DRONE_TAG}
        log_level: debug
        namespace: phlare-cd
        token:
          from_secret: argo_token
    - depends_on:
        - generate tags
      image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
      name: launch deploy-plugin-prod workflow
      settings:
        add_ci_labels: true
        command: submit --from workflowtemplate/deploy-plugin-prod --name deploy-plugin-prod-${DRONE_TAG}
          --parameter plugintag=${DRONE_TAG}
        log_level: debug
        namespace: phlare-cd
        token:
          from_secret: argo_token
  trigger:
    event:
      - promote
    ref:
      - refs/tags/*
    target:
      - opsprod
  type: docker
- get:
    name: .dockerconfigjson
    path: infra/data/ci/gcr-admin
  kind: secret
  name: dockerconfigjson
- get:
    name: .dockerconfigjson
    path: secret/data/common/gcr
  kind: secret
  name: gcr_reader
- get:
    name: gcp_key
    path: infra/data/ci/drone-plugins
  kind: secret
  name: gcs_service_account_key
- get:
    name: pat
    path: infra/data/ci/github/grafanabot
  kind: secret
  name: gh_token
- get:
    name: slack-plugin
    path: infra/data/ci/slack_webhooks
  kind: secret
  name: slack_webhook
- get:
    name: token
    path: infra/data/ci/argo-workflows/trigger-service-account
  kind: secret
  name: argo_token
- get:
    name: gcom_publish_token
    path: infra/data/ci/drone-plugins
  kind: secret
  name: gcom_publish_token
